

# This file was *autogenerated* from the file Random_Curves_orderprime.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_4 = Integer(4); _sage_const_27 = Integer(27); _sage_const_0 = Integer(0)
import sys
import random
rank_firstprime = int(sys.argv[_sage_const_1 ])
nb_primes= int(sys.argv[_sage_const_2 ])
pas= int(sys.argv[_sage_const_3 ])
LL=[]
P=Primes()
for i in range(rank_firstprime,(nb_primes*pas)+rank_firstprime+_sage_const_1 ,pas):
	p=P.unrank(i)
	while True:
		a = random.randrange(p)
		b = random.randrange(p)
		if ((_sage_const_4 * pow(a,_sage_const_3 ,p))+(_sage_const_27 *pow(b,_sage_const_2 ,p))) % p != _sage_const_0  :
			E = EllipticCurve(GF(p), [a, b])
			N = E.cardinality()
			if is_prime(N):
				print(p,a,b,N,end=";")
				break


